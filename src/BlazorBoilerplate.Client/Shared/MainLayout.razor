@inherits LayoutComponentBase
@inject AuthenticationState state
@inject IUriHelper uriHelper

@if (IsLoggedIn) {
    <MatAppBarContainer>
        <MatAppBar Fixed="true">
            <MatAppBarRow>
                <MatAppBarSection>
                    <MatAppBarTitle>
                        <img alt="Blazor Boilerplate" class="logo-img" src="images/blazorboilerplate-dark.svg" title="Blazor Boilerplate">
                        <a class="brand" href="/">Blazor Boilerplate™</a>
                    </MatAppBarTitle>
                    <MatIconButton Icon="radio_button_checked" ToggleIcon="radio_button_unchecked" OnClick="@((e) => NavToggle())" Style="font-size:smaller"></MatIconButton>
                </MatAppBarSection>
                <MatAppBarSection Align="@MatAppBarSectionAlign.End">
                    <MatIconButton Link="https://www.paypal.me/enkodellc"><i class="fa fa-cc-paypal"></i></MatIconButton>
                    <MatIconButton Link="https://github.com/enkodellc/blazorboilerplate"><i class="fa fa-github" aria-hidden="true"></i></MatIconButton>
                    <MatIconButton Icon="exit_to_app" onclick="@LogoutClick"></MatIconButton>
                </MatAppBarSection>
            </MatAppBarRow>
        </MatAppBar>

        <MatAppBarContent>
            <MatDrawerContainer Style="width: 100vw; height: 100vh;" Class="mdc-theme--surface">
                <MatDrawer bind-Opened="@_navMenuOpened">
                    <NavMenu />
                </MatDrawer>
                <MatDrawerContent> 
                    @*<div class="breadcrumb">
                        <ul>
                            <li>
                                <a href="/">Home</a>
                            </li>
                        </ul>
                    </div>*@
                    <section class="container-fluid">
                        @Body
                    </section>                        
                </MatDrawerContent>
            </MatDrawerContainer>
        </MatAppBarContent>
    </MatAppBarContainer>
}


@functions{
    protected bool IsLoggedIn;
    bool _navMenuOpened = true;

    protected override async Task OnInitAsync()
    {
        IsLoggedIn = await state.IsLoggedIn();
        if (!IsLoggedIn)
        {
            uriHelper.NavigateTo("/login");
        }
    }

    async Task LogoutClick()
    {
        await state.Logout();
        uriHelper.NavigateTo("/login");
    }

    void NavToggle()
    {
        _navMenuOpened = !_navMenuOpened;
        this.StateHasChanged();
    }

}
