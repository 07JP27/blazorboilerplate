@page "/login"
@layout LoginLayout
@inject IUriHelper uriHelper
@inject AuthenticationState state
@*TODO: Add client-side validation*@

<MatCard>
    <div class="logo">
        <img src="images/blazorboilerplate.svg" style="width:100px;" /><br />Blazor Boilerplate
        <br />
        <h4>Log In</h4>
        <sup>user : user123</sup>
    </div>

    <fieldset>
        <div class="form-group">
            <MatTextField bind-value="@loginParameters.UserName" Label="Username" Icon="mail_outline" IconTrailing="true" FullWidth="true" Required="true"></MatTextField>
        </div>
        <div class="form-group">
            <MatTextField bind-value="@loginParameters.Password" Label="Password" Icon="lock_outline" IconTrailing="true" FullWidth="true" Required="true" Type="password"></MatTextField>
        </div>
        <div class="form-group">
            <MatCheckbox bind-Checked="@loginParameters.RememberMe" class="filled-in chk-col-blue">Remember Me</MatCheckbox>
            <MatButton class="float-right" OnClick="@SubmitLogin" Raised="true">Login</MatButton>
        </div>
        @if (@error.Length > 0)
        {
            <BlazorMessageAlert Message="@error" Dismissible="true" Type="AlertType.Danger"></BlazorMessageAlert>
        }
        <hr />
        <NavLink href="register">
            <h6 class="font-weight-normal text-center">Create account</h6>
        </NavLink>
    </fieldset>
</MatCard>
<MatAccordion>
    <MatExpansionPanel bind-Expanded="@forgotPasswordToggle">
        <MatExpansionPanelSummary>
            <MatExpansionPanelHeader>Forgot Password?</MatExpansionPanelHeader>
            <MatExpansionPanelSubHeader></MatExpansionPanelSubHeader>
        </MatExpansionPanelSummary>
        <MatExpansionPanelDetails>
            <div class="form-group">
                <MatTextField bind-value="@forgotPasswordEmail" Label="Email" Icon="mail_outline" IconTrailing="true" FullWidth="true" Required="true"></MatTextField>
            </div>
            <div class="form-group">
                <MatButton class="float-right" OnClick="@ResetPassword" Raised="true">Submit</MatButton>
            </div>
            @if (@forgotError.Length > 0)
            {
                <BlazorMessageAlert Message="@forgotError" Dismissible="true" Type="AlertType.Danger"></BlazorMessageAlert>
            }
        </MatExpansionPanelDetails>
    </MatExpansionPanel>
</MatAccordion>

@functions{
    bool forgotPasswordToggle = false;
    string error { get; set; } = "";
    string @forgotError { get; set; } = "";
    LoginParameters loginParameters { get; set; } = new LoginParameters();
    string forgotPasswordEmail;

    async Task SubmitLogin()
    {
        try
        {
            error = "";
            await state.Login(loginParameters);
            uriHelper.NavigateTo("");
        }
        catch (Exception ex)
        {
            error = "Login Attempt Failed: " + ex.Message;
        }
    }

    async Task ResetPassword()
    {
        try
        {
            @*TODO: Add Forgot Password *@
            //forgotError = "";
            forgotError = "TBD / Not Implemented";
            //await state.SendPasswordResetEmail(forgotPasswordEmail);
        }
        catch (Exception ex)
        {
            forgotError = "Reset Password Attempt Failed: " + ex.Message;
        }
    }
}
